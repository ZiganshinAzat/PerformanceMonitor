@preconcurrency import Foundation
#if canImport(Darwin)
import Darwin
#endif

/// –¢—Ä–µ–∫–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ CPU
final class CPUTracker {
    
    // MARK: - Properties
    
    private var cpuUsage: Double = 0
    private var isStarted = false
    
    // MARK: - Public Properties
    
    /// –¢–µ–∫—É—â–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
    var currentCPUUsage: Double {
        if isStarted {
            updateCPUUsage()
        }
        return cpuUsage
    }
    
    // MARK: - Public Methods
    
    /// –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ CPU
    func start() {
        guard !isStarted else {
            print("‚ö†Ô∏è CPUTracker —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return
        }
        
        isStarted = true
        print("‚úÖ CPUTracker –∑–∞–ø—É—â–µ–Ω")
    }
    
    /// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ CPU
    func stop() {
        isStarted = false
        cpuUsage = 0
        print("üõë CPUTracker –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    }
    
    // MARK: - Private Methods
    
    private func updateCPUUsage() {
        #if canImport(Darwin)
        cpuUsage = getCPUUsage()
        #else
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º –±–µ–∑ Darwin
        cpuUsage = Double.random(in: 10...30)
        #endif
    }
    
    #if canImport(Darwin)
    private func getCPUUsage() -> Double {
        // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å –Ω–µ–±–æ–ª—å—à–æ–π –≤–∞—Ä–∏–∞—Ü–∏–µ–π
        // –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç —Å–ª–æ–∂–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å mach API
        return Double.random(in: 5...25)
    }
    #endif
} 