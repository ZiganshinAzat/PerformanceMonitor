import Foundation

/// –ú–æ–Ω–∏—Ç–æ—Ä —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
final class NetworkMonitor {
    
    // MARK: - Properties
    
    private var isStarted = false
    private var networkRequests: [NetworkRequestData] = []
    
    // MARK: - Public Properties
    
    /// –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    var capturedRequests: [NetworkRequestData] {
        return Array(networkRequests)
    }
    
    // MARK: - Public Methods
    
    /// –ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    func start() {
        guard !isStarted else {
            print("‚ö†Ô∏è NetworkMonitor —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return
        }
        
        isStarted = true
        print("‚úÖ NetworkMonitor –∑–∞–ø—É—â–µ–Ω (–∑–∞–≥–ª—É—à–∫–∞)")
    }
    
    /// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    func stop() {
        guard isStarted else {
            print("‚ö†Ô∏è NetworkMonitor –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            return
        }
        
        isStarted = false
        networkRequests.removeAll()
        
        print("üõë NetworkMonitor –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    }
    
    /// –û—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    func clearRequests() {
        networkRequests.removeAll()
    }
    
    /// –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ç–µ–≤–æ–π –∑–∞–ø—Ä–æ—Å (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
    func addTestRequest() {
        let testRequest = NetworkRequestData(
            url: "https://api.example.com/test",
            method: "GET",
            statusCode: 200,
            duration: Double.random(in: 0.1...2.0),
            requestSize: Int64.random(in: 100...1000),
            responseSize: Int64.random(in: 500...5000),
            timestamp: Date()
        )
        
        networkRequests.append(testRequest)
    }
} 